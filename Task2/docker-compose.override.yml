services:

  weather-sqldb:
    user: root
    environment:
      - 'SA_PASSWORD=Pass!w0rd1'
      - 'ACCEPT_EULA=Y'
    ports:
      - '1499:1433'
    volumes:
      - dbdata:/var/opt/mssql/data

  weather-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PORT=80
      - WeatherApiOptions__ApiKey=${WEATHER_API_KEY}
      - ConnectionStrings__SqlConnectionString=${SQL_CONNECTION_STRING}
    ports:
      - "5001:8080"
      - "6001:81"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  weather-ui:
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=250
      - TSC_NONPOLLING_WATCHER=1
      - NODE_ENV=development
      - PORT=80
      - PUBLIC_URL=/
    working_dir: /app
    ports:
      - '5002:80'
      - '34:34'
    restart: on-failure
    volumes:
      - './UI:/app'
      - 'node_modules:/app/node_modules'

  weather-app:
    ports:
      - 80:80

volumes:
  dbdata:
    name: weather-sqldb

  node_modules:
    name: weather_react_node_modules